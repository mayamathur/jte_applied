panel.grid.minor.x = element_blank(),
legend.position = "bottom" )
p
# set y-axis order
unique(rsp$group)
correct.order = c( "CV death and myocardial infarction (k = 2)",
"All-cause death (k = 3)",
"Myocardial infarction (k = 2)",
"Index ICA (k = 4)",
"Index revascularization (k = 4)",
"Downstream testing (k = 4)")
rsp$group = factor( rsp$group, levels = rev(correct.order) )
levels(rsp$group)
# reorder methods
correct.order = rev( c("DL-Wald", "REML-Wald", "Exact", "Jeffreys1", "Jeffreys2") )
rsp$method = factor(rsp$method.pretty, levels = correct.order)
levels(rsp$method)
# same colors as in analyze_sims_helper.R for prettiness
.colors = rev( c("#246105",
"black",
"#CC9808",
"#E075DB",
"#F2340E") )
# find good x-axis limits
summary( exp(rsp$MLo) )
summary( exp(rsp$MHi) )
xmin = 0.05
xmax = 0.85
p = ggplot( data = rsp,
aes( y = group,
x = exp(Mhat),
xmin = exp(MLo),
xmax = exp(MHi),
color = method) ) +
# reference line at null
geom_vline(xintercept = 1,
lwd = .8,
color = "gray") +
geom_errorbarh( aes(xmax = exp(MHi),
xmin = exp(MLo)),
height = 0,
lwd = 0.8,
position = position_dodge(width = 0.5) ) +
geom_point(size=3,
position=position_dodge(width = 0.5) ) +
# manually provided colors
scale_colour_manual(values = .colors,
guide = guide_legend(reverse = TRUE)) +
scale_y_discrete( name = "Outcome" ) +
# scale_x_continuous( limits = c(xmin, xmax),
#                     breaks = seq(xmin, xmax, 0.05) ) +
#scale_x_log10() +
#coord_cartesian( xlim = c(0.1, 10)) +
coord_cartesian( xlim = c(0, 10)) +
xlab( "Pooled estimate with 95% CI (RR)" ) +
labs(color  = "Method") +
theme_bw(base_size = 16) +
theme( text = element_text(face = "bold"),
axis.title = element_text(size=20),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom" )
p
my_ggsave(name = "zito_forest.pdf",
.plot = p,
.width = 10,
.height = 13,
.results.dir = results.dir,
.overleaf.dir = overleaf.dir.figs)
# ~ CI width comparisons  -------------------------------------------------
#@definitely check these and the underlying CI_ratio calculation
update_result_csv( name = "Mean perc narrower Jeffreys2 vs winning other method",
value = round( 100 * ( mean(rsp$CI_ratio) - 1 ) ),
print = TRUE )
# ~ CI width comparisons  -------------------------------------------------
#@definitely check these and the underlying CI_ratio calculation
update_result_csv( name = "Mean perc narrower Jeffreys2 vs winning other method",
value = round( 100 * ( mean(rsp$CI_ratio) - 1 ) ),
print = TRUE )
p = ggplot( data = rsp,
aes( y = group,
x = exp(Mhat),
xmin = exp(MLo),
xmax = exp(MHi),
color = method) ) +
# reference line at null
geom_vline(xintercept = 1,
lwd = .8,
color = "gray") +
geom_errorbarh( aes(xmax = exp(MHi),
xmin = exp(MLo)),
height = 0,
lwd = 0.8,
position = position_dodge(width = 0.5) ) +
geom_point(size=3,
position=position_dodge(width = 0.5) ) +
# manually provided colors
scale_colour_manual(values = .colors,
guide = guide_legend(reverse = TRUE)) +
scale_y_discrete( name = "Outcome" ) +
# scale_x_continuous( limits = c(xmin, xmax),
#                     breaks = seq(xmin, xmax, 0.05) ) +
#scale_x_log10() +
#coord_cartesian( xlim = c(0.1, 10)) +
coord_cartesian( xlim = c(0, 10)) +
xlab( "Pooled estimate with 95% CI (RR)" ) +
labs(color  = "Method") +
theme_bw(base_size = 16) +
theme( text = element_text(face = "bold"),
axis.title = element_text(size=16),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom" )
p
my_ggsave(name = "zito_forest.pdf",
.plot = p,
.width = 10,
.height = 10,
.results.dir = results.dir,
.overleaf.dir = overleaf.dir.figs)
my_ggsave(name = "zito_forest.pdf",
.plot = p,
.width = 13,
.height = 10,
.results.dir = results.dir,
.overleaf.dir = overleaf.dir.figs)
p = ggplot( data = rsp,
aes( y = group,
x = exp(Mhat),
xmin = exp(MLo),
xmax = exp(MHi),
color = method) ) +
# reference line at null
geom_vline(xintercept = 1,
lwd = .8,
color = "gray") +
geom_errorbarh( aes(xmax = exp(MHi),
xmin = exp(MLo)),
height = 0,
lwd = 0.8,
position = position_dodge(width = 0.5) ) +
geom_point(size=3,
position=position_dodge(width = 0.5) ) +
# manually provided colors
scale_colour_manual(values = .colors,
guide = guide_legend(reverse = TRUE)) +
scale_y_discrete( name = "Outcome" ) +
# scale_x_continuous( limits = c(xmin, xmax),
#                     breaks = seq(xmin, xmax, 0.05) ) +
#scale_x_log10() +
#coord_cartesian( xlim = c(0.1, 10)) +
coord_cartesian( xlim = c(0, 10)) +
xlab( "Pooled risk ratio with 95% CI (RR)" ) +
labs(color  = "Method") +
theme_bw(base_size = 16) +
theme( text = element_text(face = "bold"),
axis.title = element_text(size=16),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom" )
p
p = ggplot( data = rsp,
aes( y = group,
x = exp(Mhat),
xmin = exp(MLo),
xmax = exp(MHi),
color = method) ) +
# reference line at null
geom_vline(xintercept = 1,
lwd = .8,
color = "gray") +
geom_errorbarh( aes(xmax = exp(MHi),
xmin = exp(MLo)),
height = 0,
lwd = 0.8,
position = position_dodge(width = 0.5) ) +
geom_point(size=3,
position=position_dodge(width = 0.5) ) +
# manually provided colors
scale_colour_manual(values = .colors,
guide = guide_legend(reverse = TRUE)) +
scale_y_discrete( name = "Outcome" ) +
# scale_x_continuous( limits = c(xmin, xmax),
#                     breaks = seq(xmin, xmax, 0.05) ) +
#scale_x_log10() +
#coord_cartesian( xlim = c(0.1, 10)) +
coord_cartesian( xlim = c(0, 10)) +
xlab( "Pooled risk ratio with 95% CI" ) +
labs(color  = "Method") +
theme_bw(base_size = 16) +
theme( text = element_text(face = "bold"),
axis.title = element_text(size=16),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom" )
p
?coord_cartesian
p = ggplot( data = rsp,
aes( y = group,
x = exp(Mhat),
xmin = exp(MLo),
xmax = exp(MHi),
color = method) ) +
# reference line at null
geom_vline(xintercept = 1,
lwd = .8,
color = "gray") +
geom_errorbarh( aes(xmax = exp(MHi),
xmin = exp(MLo)),
height = 0,
lwd = 0.8,
position = position_dodge(width = 0.5) ) +
geom_point(size=3,
position=position_dodge(width = 0.5) ) +
# manually provided colors
scale_colour_manual(values = .colors,
guide = guide_legend(reverse = TRUE)) +
scale_y_discrete( name = "Outcome" ) +
# scale_x_continuous( limits = c(xmin, xmax),
#                     breaks = seq(xmin, xmax, 0.05) ) +
#scale_x_log10() +
#coord_cartesian( xlim = c(0.1, 10)) +
coord_cartesian( xlim = c(0, 10)) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
xlab( "Pooled risk ratio with 95% CI" ) +
labs(color  = "Method") +
theme_bw(base_size = 16) +
theme( text = element_text(face = "bold"),
axis.title = element_text(size=16),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom" )
p
my_ggsave(name = "zito_forest.pdf",
.plot = p,
.width = 13,
.height = 10,
.results.dir = results.dir,
.overleaf.dir = overleaf.dir.figs)
.group
d$group
.group = "CV death and myocardial infarction (k = 2)"
# test only
#.group = "CV death and myocardial infarction (k = 2)"
.dat = d %>% filter(group==.group)
rep.res = data.frame()
### DL
rep.res = run_method_safe(method.label = c("DL-Wald"),
method.fn = function() {
mod = rma( yi = .dat$yi,
vi = .dat$vi,
method = "DL",
knha = TRUE )
report_meta(mod, .mod.type = "rma")
},
.rep.res = rep.res )
mod
mod = rma( yi = .dat$yi,
vi = .dat$vi,
method = "DL",
knha = TRUE )
mod
exp(1.77)
mod = rma( yi = .dat$yi,
vi = .dat$vi,
method = "REML",
knha = TRUE )
exp(mod$ci.ub)
.dat = d %>% filter(group == .g)
# note: CIs differ a LOT with KNHA vs. without; their analyses clearly don't use it
m = rma( yi = .dat$yi, vi = .dat$vyi,
method = "DL", knha = FALSE )
# bm: this part can be done at the end (after entering each group )
# sanity check vs. their results
for ( .g in unique(d$group) ) {
cat("\n\n        ******* GROUP", .g)
.dat = d %>% filter(group == .g)
# note: CIs differ a LOT with KNHA vs. without; their analyses clearly don't use it
m = rma( yi = .dat$yi, vi = .dat$vyi,
method = "DL", knha = FALSE )
cat("\n Without KNHA: RR = ", round( exp(m$beta), 3), ", hi = ", round( exp(m$ci.ub), 3) )
m = rma( yi = .dat$yi, vi = .dat$vyi,
method = "DL", knha = TRUE )
cat("\n With KNHA: RR = ", round( exp(m$beta), 3), ", hi = ", round( exp(m$ci.ub), 3) )
cat("\n\n")
}
# these are on RR scale still
yi = c(0.66, 0.29,  # CV & MI (Fig 3)
0.32, 0.33, 0.80, # all-cause death (Fig 4)
0.71, 0.29,  # MI (Fig 6)
0.74, 1.16, 1.68, 1.24,  # index ICA (Fig 7)
1.12, 0.79, 6.85, 1.68,  # index revascularization (Fig 8)
0.71, 1.95, 0.92, 1.08 )  # downstream testing (Fig 9)
hi = c(0.94, 1.41,
3.07, 8.06, 1.15,
1.22, 1.41,
0.99, 2.09, 4.06, 1.42,
1.69, 1.96, 54.52, 2.08,
0.94, 2.95, 1.74, 1.18 )
group = c( rep("CV death and myocardial infarction (k = 2)", 2),
rep("All-cause death (k = 3)", 3),
rep("Myocardial infarction (k = 2)", 2),
rep("Index ICA (k = 4)", 4),
rep("Index revascularization (k = 4)", 4),
rep("Downstream testing (k = 4)", 4)
)
d = scrape_meta(type = "RR", est = yi, hi = hi)
d$group = group
# sanity check vs. their results
for ( .g in unique(d$group) ) {
cat("\n\n        ******* GROUP", .g)
.dat = d %>% filter(group == .g)
# note: CIs differ a LOT with KNHA vs. without; their analyses clearly don't use it
m = rma( yi = .dat$yi, vi = .dat$vyi,
method = "DL", knha = FALSE )
cat("\n Without KNHA: RR = ", round( exp(m$beta), 3), ", hi = ", round( exp(m$ci.ub), 3) )
m = rma( yi = .dat$yi, vi = .dat$vyi,
method = "DL", knha = TRUE )
cat("\n With KNHA: RR = ", round( exp(m$beta), 3), ", hi = ", round( exp(m$ci.ub), 3) )
cat("\n\n")
}
# studies' RR estimates and CI upper bounds
# from Supplementary Figure 3
yi = c(0.66, 0.29)
hi = c(0.94, 1.41)
yi = c(0.66, 0.29)
hi = c(0.94, 1.41)
dat = scrape_meta(type = "RR", est = yi, hi = hi)
m1 = rma.uni(yi = yi,
sei = sei,
data = dat,
method = "DL",
knha = TRUE)
dat
m1 = rma.uni(yi = yi,
vi = vyi,
data = dat,
method = "DL",
knha = TRUE)
exp(m1$b)
exp(m1$ci.ub)
# without KNHA
m2 = rma.uni(yi = yi,
vi = vyi,
data = dat,
method = "DL",
knha = FALSE)
exp(m2$b)
exp(m2$ci.ub)  # dramatically higher than reported upper limit of 0.90
exp(m1$b)
exp(m2$ci.ub)  # dramatically higher than reported upper limit of 0.90
p = ggplot( data = rsp,
aes( y = group,
x = exp(Mhat),
xmin = exp(MLo),
xmax = exp(MHi),
color = method) ) +
# reference line at null
geom_vline(xintercept = 1,
lwd = .8,
color = "gray") +
geom_errorbarh( aes(xmax = exp(MHi),
xmin = exp(MLo)),
height = 0,
lwd = 0.8,
position = position_dodge(width = 0.5) ) +
geom_point(size=3,
position=position_dodge(width = 0.5) ) +
# manually provided colors
scale_colour_manual(values = .colors,
guide = guide_legend(reverse = TRUE)) +
scale_y_discrete( name = "Outcome" ) +
# scale_x_continuous( limits = c(xmin, xmax),
#                     breaks = seq(xmin, xmax, 0.05) ) +
scale_x_log10() +
coord_cartesian( xlim = c(0.1, 10)) +
# coord_cartesian( xlim = c(0, 10)) +
# scale_x_continuous(breaks = seq(0, 10, 1)) +
xlab( "Pooled risk ratio with 95% CI" ) +
labs(color  = "Method") +
theme_bw(base_size = 16) +
theme( text = element_text(face = "bold"),
axis.title = element_text(size=16),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom" )
p
p = ggplot( data = rsp,
aes( y = group,
x = exp(Mhat),
xmin = exp(MLo),
xmax = exp(MHi),
color = method) ) +
# reference line at null
geom_vline(xintercept = 1,
lwd = .8,
color = "gray") +
geom_errorbarh( aes(xmax = exp(MHi),
xmin = exp(MLo)),
height = 0,
lwd = 0.8,
position = position_dodge(width = 0.5) ) +
geom_point(size=3,
position=position_dodge(width = 0.5) ) +
# manually provided colors
scale_colour_manual(values = .colors,
guide = guide_legend(reverse = TRUE)) +
scale_y_discrete( name = "Outcome" ) +
# scale_x_continuous( limits = c(xmin, xmax),
#                     breaks = seq(xmin, xmax, 0.05) ) +
scale_x_log10() +
coord_cartesian( xlim = c(0.1, 10),
breaks = seq(0.1, 10, 1) ) +
# coord_cartesian( xlim = c(0, 10)) +
# scale_x_continuous(breaks = seq(0, 10, 1)) +
xlab( "Pooled risk ratio with 95% CI" ) +
labs(color  = "Method") +
theme_bw(base_size = 16) +
theme( text = element_text(face = "bold"),
axis.title = element_text(size=16),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom" )
p
p = ggplot( data = rsp,
aes( y = group,
x = exp(Mhat),
xmin = exp(MLo),
xmax = exp(MHi),
color = method) ) +
# reference line at null
geom_vline(xintercept = 1,
lwd = .8,
color = "gray") +
geom_errorbarh( aes(xmax = exp(MHi),
xmin = exp(MLo)),
height = 0,
lwd = 0.8,
position = position_dodge(width = 0.5) ) +
geom_point(size=3,
position=position_dodge(width = 0.5) ) +
# manually provided colors
scale_colour_manual(values = .colors,
guide = guide_legend(reverse = TRUE)) +
scale_y_discrete( name = "Outcome" ) +
# scale_x_continuous( limits = c(xmin, xmax),
#                     breaks = seq(xmin, xmax, 0.05) ) +
scale_x_log10(breaks = seq(0.1, 10, 1)) +
coord_cartesian( xlim = c(0.1, 10)) +
# coord_cartesian( xlim = c(0, 10)) +
# scale_x_continuous(breaks = seq(0, 10, 1)) +
xlab( "Pooled risk ratio with 95% CI" ) +
labs(color  = "Method") +
theme_bw(base_size = 16) +
theme( text = element_text(face = "bold"),
axis.title = element_text(size=16),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom" )
p
p = ggplot( data = rsp,
aes( y = group,
x = exp(Mhat),
xmin = exp(MLo),
xmax = exp(MHi),
color = method) ) +
# reference line at null
geom_vline(xintercept = 1,
lwd = .8,
color = "gray") +
geom_errorbarh( aes(xmax = exp(MHi),
xmin = exp(MLo)),
height = 0,
lwd = 0.8,
position = position_dodge(width = 0.5) ) +
geom_point(size=3,
position=position_dodge(width = 0.5) ) +
# manually provided colors
scale_colour_manual(values = .colors,
guide = guide_legend(reverse = TRUE)) +
scale_y_discrete( name = "Outcome" ) +
# scale_x_continuous( limits = c(xmin, xmax),
#                     breaks = seq(xmin, xmax, 0.05) ) +
# scale_x_log10(breaks = seq(0.1, 10, 1)) +
# coord_cartesian( xlim = c(0.1, 10)) +
coord_cartesian( xlim = c(0, 10)) +
scale_x_continuous(breaks = seq(0, 10, 1)) +
xlab( "Pooled risk ratio with 95% CI" ) +
labs(color  = "Method") +
theme_bw(base_size = 16) +
theme( text = element_text(face = "bold"),
axis.title = element_text(size=16),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "bottom" )
p
update_result_csv( name = "Mean perc narrower Jeffreys2 vs winning other method k=2",
value = round( 100 * ( mean(rsp$CI_ratio[rsp$k==2]) - 1 ) ),
print = TRUE )
rsp$CI_ratio
View(rsp %>% filter(k==2))
4.45*2
round( 100 * ( mean(rsp$CI_ratio[rsp$k==2]) - 1 ) )
exp(.51)
exp(rsp$MLo[ rsp$group == "CV death and myocardial infarction (k = 2)"])
# comparing specific CI limits
exp(rsp$MLo[ rsp$group == "CV death and myocardial infarction (k = 2)" & method.pretty == "Jeffreys2"])
# comparing specific CI limits
exp(rsp$MLo[ rsp$group == "CV death and myocardial infarction (k = 2)" & rsp$method.pretty == "Jeffreys2"])
exp(rsp$MHi[ rsp$group == "CV death and myocardial infarction (k = 2)" & rsp$method.pretty == "Jeffreys2"])
exp(rsp$MLo[ rsp$group == "CV death and myocardial infarction (k = 2)" & rsp$method.pretty == "REML-Wald"])
exp(rsp$MHi[ rsp$group == "CV death and myocardial infarction (k = 2)" & rsp$method.pretty == "REML-Wald"])
