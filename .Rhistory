MhatRhat = maxlp$MhatRhat,
ShatRhat = maxlp$ShatRhat,
OptimConverged = optim_converged) ) )
}, .rep.res = rep.res )
srr(rep.res)
d = d[1:10,]
rep.res = data.frame()
rep.res = run_method_safe(method.label = c("REML"),
method.fn = function() {
mod = rma( yi = d$yi,
vi = d$vi,
method = "REML",
knha = TRUE )
report_meta(mod, .mod.type = "rma")
},
.rep.res = rep.res )
rep.res = run_method_safe(method.label = c("REML"),
method.fn = function() {
mod = rma( yi = d$yi,
vi = d$vi,
method = "REML",
knha = TRUE )
report_meta(mod, .mod.type = "rma")
},
.rep.res = rep.res )
srr(rep.res)
## Jeffreys
rep.res = run_method_safe(method.label = c("jeffreys-pmean",
"jeffreys-pmed",
"jeffreys-max-lp-iterate"),
method.fn = function() estimate_jeffreys(.yi = d$yi,
.sei = d$sei,
.Mu.start = 0,
# can't handle start value of 0:
.Tt.start = 0.2,
.stan.adapt_delta = 0.995,
.stan.maxtreedepth = 25), .rep.res = rep.res )
# start values for finding posterior mode analytically
maxlp = rep.res[ rep.res$method == "jeffreys-max-lp-iterate", ]
Mhat.MaxLP = maxlp$Mhat
Shat.MaxLP = maxlp$Shat
srr(rep.res)
# find posterior mode analytically
rep.res = run_method_safe(method.label = c("Jeffreys"),
method.fn = function() {
# as in the future pkg
mle_fit <- mle_params(Mhat.MaxLP, Shat.MaxLP, d$yi, d$sei)
modes <- c(mle_fit@coef[["mu"]], mle_fit@coef[["tau"]])
optim_converged <- mle_fit@details$convergence == 0
return( list( stats = data.frame(
Mhat = modes[1],
Shat = modes[2],
# all inference is again from MCMC
MhatSE = maxlp$MhatSE,
ShatSE = maxlp$ShatSE,
MLo = maxlp$MLo,
MHi =maxlp$MHi,
SLo = maxlp$SLo,
SHi = maxlp$SHi,
stan.warned = maxlp$stan.warned,
stan.warning = maxlp$stan.warning,
MhatRhat = maxlp$MhatRhat,
ShatRhat = maxlp$ShatRhat,
OptimConverged = optim_converged) ) )
}, .rep.res = rep.res )
srr(rep.res)
d = d[1:8,]
rep.res = data.frame()
rep.res = run_method_safe(method.label = c("REML"),
method.fn = function() {
mod = rma( yi = d$yi,
vi = d$vi,
method = "REML",
knha = TRUE )
report_meta(mod, .mod.type = "rma")
},
.rep.res = rep.res )
rep.res = run_method_safe(method.label = c("REML"),
method.fn = function() {
mod = rma( yi = d$yi,
vi = d$vi,
method = "REML",
knha = TRUE )
report_meta(mod, .mod.type = "rma")
},
.rep.res = rep.res )
srr(rep.res)
## Jeffreys
rep.res = run_method_safe(method.label = c("jeffreys-pmean",
"jeffreys-pmed",
"jeffreys-max-lp-iterate"),
method.fn = function() estimate_jeffreys(.yi = d$yi,
.sei = d$sei,
.Mu.start = 0,
# can't handle start value of 0:
.Tt.start = 0.2,
.stan.adapt_delta = 0.995,
.stan.maxtreedepth = 25), .rep.res = rep.res )
# start values for finding posterior mode analytically
maxlp = rep.res[ rep.res$method == "jeffreys-max-lp-iterate", ]
Mhat.MaxLP = maxlp$Mhat
Shat.MaxLP = maxlp$Shat
srr(rep.res)
# find posterior mode analytically
rep.res = run_method_safe(method.label = c("Jeffreys"),
method.fn = function() {
# as in the future pkg
mle_fit <- mle_params(Mhat.MaxLP, Shat.MaxLP, d$yi, d$sei)
modes <- c(mle_fit@coef[["mu"]], mle_fit@coef[["tau"]])
optim_converged <- mle_fit@details$convergence == 0
return( list( stats = data.frame(
Mhat = modes[1],
Shat = modes[2],
# all inference is again from MCMC
MhatSE = maxlp$MhatSE,
ShatSE = maxlp$ShatSE,
MLo = maxlp$MLo,
MHi =maxlp$MHi,
SLo = maxlp$SLo,
SHi = maxlp$SHi,
stan.warned = maxlp$stan.warned,
stan.warning = maxlp$stan.warning,
MhatRhat = maxlp$MhatRhat,
ShatRhat = maxlp$ShatRhat,
OptimConverged = optim_converged) ) )
}, .rep.res = rep.res )
srr(rep.res)
setwd("/Users/mmathur/Dropbox/Personal computer/Reference sheets/Library of prepped example meta-analyses/SAPB")
d = fread("boehm_prepped.csv")
d$sei = sqrt(d$vi)
dim(d)
rep.res = data.frame()
rep.res = run_method_safe(method.label = c("REML"),
method.fn = function() {
mod = rma( yi = d$yi,
vi = d$vi,
method = "REML",
knha = TRUE )
report_meta(mod, .mod.type = "rma")
},
.rep.res = rep.res )
rep.res = run_method_safe(method.label = c("REML"),
method.fn = function() {
mod = rma( yi = d$yi,
vi = d$vi,
method = "REML",
knha = TRUE )
report_meta(mod, .mod.type = "rma")
},
.rep.res = rep.res )
srr(rep.res)
## Jeffreys
rep.res = run_method_safe(method.label = c("jeffreys-pmean",
"jeffreys-pmed",
"jeffreys-max-lp-iterate"),
method.fn = function() estimate_jeffreys(.yi = d$yi,
.sei = d$sei,
.Mu.start = 0,
# can't handle start value of 0:
.Tt.start = 0.2,
.stan.adapt_delta = 0.995,
.stan.maxtreedepth = 25), .rep.res = rep.res )
# start values for finding posterior mode analytically
maxlp = rep.res[ rep.res$method == "jeffreys-max-lp-iterate", ]
Mhat.MaxLP = maxlp$Mhat
Shat.MaxLP = maxlp$Shat
srr(rep.res)
names(meta_meat)
# other metas
setwd("/Users/mmathur/Dropbox/Personal computer/Reference sheets/Library of prepped example meta-analyses/AWR")
d = fread("mathur_data_prepped.csv")
# other metas
setwd("/Users/mmathur/Dropbox/Personal computer/Reference sheets/Library of prepped example meta-analyses/MRM")
list.files()
d = fread("mathur_awr_prepped.csv")
d$sei = sqrt(d$vi)
names(d)
# from AWR code
d = d %>% mutate( hi.qual = (randomized == TRUE) &
qual.exch %in% c("a.Low", "b.Medium") &
qual.sdb %in% c("a.Low", "b.Medium") &  # this is the killer
!is.na(qual.missing) & qual.missing < 15 )   # reducing this to 5 doesn't change
table(d$hi.qual)
rep.res = data.frame()
rep.res = run_method_safe(method.label = c("REML"),
method.fn = function() {
mod = rma( yi = d$yi,
vi = d$vi,
method = "REML",
knha = TRUE )
report_meta(mod, .mod.type = "rma")
},
.rep.res = rep.res )
rep.res = run_method_safe(method.label = c("REML"),
method.fn = function() {
mod = rma( yi = d$yi,
vi = d$vi,
method = "REML",
knha = TRUE )
report_meta(mod, .mod.type = "rma")
},
.rep.res = rep.res )
srr(rep.res)
d = d %>% filter(hi.qual == TRUE)
rep.res = data.frame()
rep.res = run_method_safe(method.label = c("REML"),
method.fn = function() {
mod = rma( yi = d$yi,
vi = d$vi,
method = "REML",
knha = TRUE )
report_meta(mod, .mod.type = "rma")
},
.rep.res = rep.res )
srr(rep.res)
## Jeffreys
rep.res = run_method_safe(method.label = c("jeffreys-pmean",
"jeffreys-pmed",
"jeffreys-max-lp-iterate"),
method.fn = function() estimate_jeffreys(.yi = d$yi,
.sei = d$sei,
.Mu.start = 0,
# can't handle start value of 0:
.Tt.start = 0.2,
.stan.adapt_delta = 0.995,
.stan.maxtreedepth = 25), .rep.res = rep.res )
# start values for finding posterior mode analytically
maxlp = rep.res[ rep.res$method == "jeffreys-max-lp-iterate", ]
Mhat.MaxLP = maxlp$Mhat
Shat.MaxLP = maxlp$Shat
srr(rep.res)
d$authoryear
# pre-aggregate the clusters
d %>% group_by(authoryear) %>%
mutate( yi_agg = rma.uni(yi = yi, sei = sei, method = "FE")$b )
View(d)
# pre-aggregate the clusters
d= d %>% group_by(authoryear) %>%
mutate( yi_agg = rma.uni(yi = yi, sei = sei, method = "FE")$b )
View(d)
d$yi_agg
d$yi
# pre-aggregate the clusters
d= d %>% group_by(authoryear) %>%
mutate( yi_agg = rma.uni(yi = yi, sei = sei, method = "FE")$b,
vi_agg = rma.uni(yi = yi, sei = sei, method = "FE")$se^2 )
View(d)
d$vi_agg
d$vi
d2 = d %>% filter( !duplicated(authoryear) )
.dat = d2 %>% select(yi_agg, vi_agg)
names(.dat) = c("yi", "vi")
View(.dat)
# AWR subset of high-quality studies
setwd("/Users/mmathur/Dropbox/Personal computer/Reference sheets/Library of prepped example meta-analyses/MRM")
d = fread("mathur_awr_prepped.csv")
# from AWR code
d = d %>% mutate( hi.qual = (randomized == TRUE) &
qual.exch %in% c("a.Low", "b.Medium") &
qual.sdb %in% c("a.Low", "b.Medium") &  # this is the killer
!is.na(qual.missing) & qual.missing < 15 )   # reducing this to 5 doesn't change
d = d %>% filter(hi.qual == TRUE)
d$authoryear
# pre-aggregate the clusters
d = d %>% group_by(authoryear) %>%
mutate( yi_agg = rma.uni(yi = yi, sei = sei, method = "FE")$b,
vi_agg = rma.uni(yi = yi, sei = sei, method = "FE")$se^2 )
d$sei = sqrt(d$vi)
# pre-aggregate the clusters
d = d %>% group_by(authoryear) %>%
mutate( yi_agg = rma.uni(yi = yi, sei = sei, method = "FE")$b,
vi_agg = rma.uni(yi = yi, sei = sei, method = "FE")$se^2 )
d2 = d %>% filter( !duplicated(authoryear) )
names(d2)
.dat = d2 %>% select(yi_agg, vi_agg)
.dat
View(d)
.dat = d2 %>% select(yi_agg, vi_agg)
names(.dat) = c( "authoryear", "yi", "vi")
.dat$sei = sqrt(.dat$vi)
.dat
.dat = d2 %>% select(yi_agg, vi_agg)
.dat
names(.dat) = c( "authoryear", "yi", "vi")
.dat
.dat = as.data.frame( d2 %>% select(yi_agg, vi_agg) )
names(.dat) = c( "authoryear", "yi", "vi")
.dat$sei = sqrt(.dat$vi)
.dat
rep.res = run_method_safe(method.label = c("REML"),
method.fn = function() {
mod = rma( yi = .dat$yi,
vi = .dat$vi,
method = "REML",
knha = TRUE )
report_meta(mod, .mod.type = "rma")
},
.rep.res = rep.res )
srr(rep.res)
rep.res = data.frame()
rep.res = run_method_safe(method.label = c("REML"),
method.fn = function() {
mod = rma( yi = .dat$yi,
vi = .dat$vi,
method = "REML",
knha = TRUE )
report_meta(mod, .mod.type = "rma")
},
.rep.res = rep.res )
srr(rep.res)
exp(-0.13)
## Jeffreys
rep.res = run_method_safe(method.label = c("jeffreys-pmean",
"jeffreys-pmed",
"jeffreys-max-lp-iterate"),
method.fn = function() estimate_jeffreys(.yi = .dat$yi,
.sei = .dat$sei,
.Mu.start = 0,
# can't handle start value of 0:
.Tt.start = 0.2,
.stan.adapt_delta = 0.995,
.stan.maxtreedepth = 25), .rep.res = rep.res )
# start values for finding posterior mode analytically
maxlp = rep.res[ rep.res$method == "jeffreys-max-lp-iterate", ]
Mhat.MaxLP = maxlp$Mhat
Shat.MaxLP = maxlp$Shat
srr(rep.res)
.dat$yi
.dat$sei
.dat$yi
.dat$sei
.ddat
.dat
## Jeffreys
rep.res = run_method_safe(method.label = c("jeffreys-pmean",
"jeffreys-pmed",
"jeffreys-max-lp-iterate"),
method.fn = function() estimate_jeffreys(.yi = as.numeric(.dat$yi),
.sei = .dat$sei,
.Mu.start = 0,
# can't handle start value of 0:
.Tt.start = 0.2,
.stan.adapt_delta = 0.995,
.stan.maxtreedepth = 25), .rep.res = rep.res )
# start values for finding posterior mode analytically
maxlp = rep.res[ rep.res$method == "jeffreys-max-lp-iterate", ]
Mhat.MaxLP = maxlp$Mhat
Shat.MaxLP = maxlp$Shat
srr(rep.res)
exp(-0.06)
exp(-0.13)
yi = c(2.04, 10.84, -2.00, 33.70, 19.10, -4.20, 56.40, -9.67, 13.20, -12.32, 5.37, 13.50, -6.47, 10.20, 16.20, 11.78,
-5.23, 47.90, 62.00, 18.60,
65.11, 63.70, 25.80, 6.50)
lo = c(-47.59, -23.95, -28.87, -4.98, -25.27, -35.00, -18.70, -32.83, -7.62, -51.07, -24.49, -31.60, -28.43, -17.37, -3.66, -24.09,
-46.39, 10.05, 25.06, -2.45,
12.94, 28.42, 3.32, -26.21)
hi = c(51.67, 45.63, 24.87, 72.38, 63.47, 26.60, 94.10, 13.49, 34.02, 26.43, 35.23, 58.60, 15.49, 37.77, 36.06, 47.65,
35.93, 85.75, 98.94, 39.65,
117.28, 98.98, 48.28, 49.21)
yi = c(2.04, 10.84, -2.00, 33.70, 19.10, -4.20, 56.40, -9.67, 13.20, -12.32, 5.37, 13.50, -6.47, 10.20, 16.20, 11.78,
-5.23, 47.90, 62.00, 18.60,
65.11, 63.70, 25.80, 6.50)
lo = c(-47.59, -23.95, -28.87, -4.98, -25.27, -35.00, -18.70, -32.83, -7.62, -51.07, -24.49, -31.60, -28.43, -17.37, -3.66, -24.09,
-46.39, 10.05, 25.06, -2.45,
12.94, 28.42, 3.32, -26.21)
hi = c(51.67, 45.63, 24.87, 72.38, 63.47, 26.60, 94.10, 13.49, 34.02, 26.43, 35.23, 58.60, 15.49, 37.77, 36.06, 47.65,
35.93, 85.75, 98.94, 39.65,
117.28, 98.98, 48.28, 49.21)
group = rep( c("Posttreatment", 16),
c("Early follow-up", 4),
c("Late follow-up", 4) )
total sleep time
d = scrape_meta(type = "raw", est = yi, hi = hi)
d
d$group = group
group = c( rep("Posttreatment", 16),
rep("Early follow-up", 4),
rep("Late follow-up", 4) )
d = data.frame()
d = scrape_meta(type = "raw", est = yi, hi = hi)
d$group = group
rep("Posttreatment", 16)
rep("Early follow-up", 4)
group = c( rep("Posttreatment", 16),
rep("Early follow-up", 4),
rep("Late follow-up", 4) )
group
d = scrape_meta(type = "raw", est = yi, hi = hi)
d$group = group
d
names(d)[names(d) == "vyi"] = "vi"
# sanity checks: reproduce their results
rma.uni(yi = yi, vi = vi, data = d %>% filter(group=="posttreatment"))
# sanity checks: reproduce their results
rma.uni(yi = yi, vi = vi, data = d %>% filter(group=="Posttreatment"))
?scrape_meta
15-7.6
d = scrape_meta(type = "raw", est = yi, hi = hi, knha = TRUE)
# sanity checks: reproduce their results
rma.uni(yi = yi, vi = vi, data = d %>% filter(group=="Posttreatment"), knha = TRUE)
rma.uni(yi = yi, vi = vi, data = d %>% filter(group=="Early follow-up"), knha = TRUE)
rma.uni(yi = yi, vi = vi, data = d %>% filter(group=="Late follow-up"), knha = TRUE)
### Insomnia meta
# see prep script
.dat = d
.dat$sei = sqrt(.dat$vi)
.dat
rep.res = data.frame()
rep.res = run_method_safe(method.label = c("REML"),
method.fn = function() {
mod = rma( yi = .dat$yi,
vi = .dat$vi,
method = "REML",
knha = TRUE )
report_meta(mod, .mod.type = "rma")
},
.rep.res = rep.res )
srr(rep.res)
### Insomnia meta
# see prep script
.dat = d %>% filter(group=="Posttreatment")
.dat$sei = sqrt(.dat$vi)
rep.res = data.frame()
d$sei = sqrt(d$vi)
### Insomnia meta
# see prep script
.dat = d %>% filter(group=="Posttreatment")
rep.res = data.frame()
rep.res = run_method_safe(method.label = c("REML"),
method.fn = function() {
mod = rma( yi = .dat$yi,
vi = .dat$vi,
method = "REML",
knha = TRUE )
report_meta(mod, .mod.type = "rma")
},
.rep.res = rep.res )
srr(rep.res)
## Jeffreys
rep.res = run_method_safe(method.label = c("jeffreys-pmean",
"jeffreys-pmed",
"jeffreys-max-lp-iterate"),
method.fn = function() estimate_jeffreys(.yi = as.numeric(.dat$yi),
.sei = .dat$sei,
.Mu.start = 0,
# can't handle start value of 0:
.Tt.start = 0.2,
.stan.adapt_delta = 0.995,
.stan.maxtreedepth = 25), .rep.res = rep.res )
# start values for finding posterior mode analytically
maxlp = rep.res[ rep.res$method == "jeffreys-max-lp-iterate", ]
Mhat.MaxLP = maxlp$Mhat
Shat.MaxLP = maxlp$Shat
srr(rep.res)
.dat = d %>% filter(group=="Early follow-up")
rep.res = data.frame()
rep.res = run_method_safe(method.label = c("REML"),
method.fn = function() {
mod = rma( yi = .dat$yi,
vi = .dat$vi,
method = "REML",
knha = TRUE )
report_meta(mod, .mod.type = "rma")
},
.rep.res = rep.res )
srr(rep.res)
## Jeffreys
rep.res = run_method_safe(method.label = c("jeffreys-pmean",
"jeffreys-pmed",
"jeffreys-max-lp-iterate"),
method.fn = function() estimate_jeffreys(.yi = as.numeric(.dat$yi),
.sei = .dat$sei,
.Mu.start = 0,
# can't handle start value of 0:
.Tt.start = 0.2,
.stan.adapt_delta = 0.995,
.stan.maxtreedepth = 25), .rep.res = rep.res )
# start values for finding posterior mode analytically
maxlp = rep.res[ rep.res$method == "jeffreys-max-lp-iterate", ]
Mhat.MaxLP = maxlp$Mhat
Shat.MaxLP = maxlp$Shat
srr(rep.res)
.dat = d %>% filter(group=="Late follow-up")
rep.res = data.frame()
rep.res = run_method_safe(method.label = c("REML"),
method.fn = function() {
mod = rma( yi = .dat$yi,
vi = .dat$vi,
method = "REML",
knha = TRUE )
report_meta(mod, .mod.type = "rma")
},
.rep.res = rep.res )
srr(rep.res)
## Jeffreys
rep.res = run_method_safe(method.label = c("jeffreys-pmean",
"jeffreys-pmed",
"jeffreys-max-lp-iterate"),
method.fn = function() estimate_jeffreys(.yi = as.numeric(.dat$yi),
.sei = .dat$sei,
.Mu.start = 0,
# can't handle start value of 0:
.Tt.start = 0.2,
.stan.adapt_delta = 0.995,
.stan.maxtreedepth = 25), .rep.res = rep.res )
# start values for finding posterior mode analytically
maxlp = rep.res[ rep.res$method == "jeffreys-max-lp-iterate", ]
Mhat.MaxLP = maxlp$Mhat
Shat.MaxLP = maxlp$Shat
srr(rep.res)
?phacking
